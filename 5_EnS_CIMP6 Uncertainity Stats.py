# do the summary stats on all rasters in a workspace, then update to one table
# ---------------------------------------------------------------------------
#
# Created on: 2013-07-02 17:29:44.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy
from arcpy.sa import *
import os
import winsound
import xlwt
arcpy.CheckOutExtension("spatial")
# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")

print("This script will calculate the average uncertainty for all scenarios found within a directory.")
time_format = '%Y-%m-%d %H:%M:%S'
time_now = datetime.datetime.now()
time_str = time_now.strftime(time_format)
print("        Start Time:  " + str(time_str))
print("")
# Load required toolboxes

# Allow overwirte
arcpy.env.overwriteOutput = True

# Local variables:

stat_zone = "Z:\\Blue Lotus\\Global Baseline Datasets\\Region_27 Boundary\\region_27.shp"
in_path = "E:\\CIMP6_EnS_Analysis_2021-2040\\CIMP6_EnS_Ensemble_2030\\"
out_path = "E:\\CIMP6_Model_Analysis\\"
stats_out_table = "E:\\CIMP6_Model_Analysis\\Uncertainity_Stats_2030_v1.xls"

print("            in_path = " + in_path)
print("           out_path = " + out_path)
print("    stats_out_table = " + stats_out_table)
print("          stat_zone = " + stat_zone)
print("")
arcpy.env.workspace = in_path

obj_id = 1

# Create a new excel to record the results
wb = xlwt.Workbook()
ws = wb.add_sheet("Average Uncertainty")
ws.write(0, 0, "Scenario")
ws.write(0, 1, "COUNT")
ws.write(0, 2, "AREA")
ws.write(0, 3, "MEAN")
ws.write(0, 4, "MIN")
ws.write(0, 5, "MAX")
ws.write(0, 6, "STD")
ws.write(0, 7, "SUM")
ws.write(0, 8, "MEDIAN")
# ws.write(0, 9, "VARIETY")
# ws.write(0, 10, "MAJORITY")
# ws.write(0, 11, "MINORITY")

number = 1

# Iterate by raster in directory
rasters = arcpy.ListRasters("p_*", "TIF")
print(rasters)
for raster in rasters:
    table_out = "zs_" + raster.rstrip(".tif") + ".dbf"
    zs__Name = out_path + table_out
    in_data = in_path + raster
    print("Dataset #" + str(obj_id))
    time_format = '%Y-%m-%d %H:%M:%S'
    time_now = datetime.datetime.now()
    time_str = time_now.strftime(time_format)
    print("        Start Time:  " + str(time_str))

    if os.path.exists(zs__Name):
        print("Table Exists:  " + zs__Name)
        print("     Updating Table: ")

        # Get data (rows) from table
        # query_in_row = '"Rowid" = 1'
        srows = arcpy.SearchCursor(zs__Name)
        for srow in srows:
            # put data into new row in stats_out_table
            ws.write(number, 0, str(raster))
            ws.write(number, 1, round(srow.COUNT, 2))
            ws.write(number, 2, round(srow.AREA, 2))
            ws.write(number, 3, round(srow.MEAN, 2))
            ws.write(number, 4, round(srow.MIN, 2))
            ws.write(number, 5, round(srow.MAX, 2))
            ws.write(number, 6, round(srow.STD, 2))
            ws.write(number, 7, round(srow.SUM, 2))
            ws.write(number, 8, round(srow.MEDIAN, 2))
            # ws.write(number, 9, round(srow.VARIETY, 2))
            # ws.write(number, 10, round(srow.MAJORITY, 2))
            # ws.write(number, 11, round(srow.MINORITY, 2))

            number += 1
            del srow
            del srows
            # del zs_Name
        print("     Table Update Complete: ")
        print("")
        obj_id += 1
    else:
        print("Processing:  " + table_out)

        # Process: Zonal Statistics as Table
        arcpy.gp.ZonalStatisticsAsTable_sa(stat_zone, "dis", in_data, zs__Name, "DATA", "ALL")

        print("     Updating Table:")

        # Get data (rows) from table
        # query_in_row = '"Rowid" = 1'
        srows = arcpy.SearchCursor(zs__Name)

        for srow in srows:
            # put data into new row in stats_out_table
            ws.write(number, 0, str(raster))
            ws.write(number, 1, round(srow.COUNT, 2))
            ws.write(number, 2, round(srow.AREA, 2))
            ws.write(number, 3, round(srow.MEAN, 2))
            ws.write(number, 4, round(srow.MIN, 2))
            ws.write(number, 5, round(srow.MAX, 2))
            ws.write(number, 6, round(srow.STD, 2))
            ws.write(number, 7, round(srow.SUM, 2))
            ws.write(number, 8, round(srow.MEDIAN, 2))

            number += 1
            del srow
            del srows
        print("     Table Update Complete: ")
        print("")
        obj_id += 1
print("Saving Excel Workbook")
wb.save(stats_out_table)
print("number of datasets finished = " + str(obj_id - 1))
time_format = '%Y-%m-%d %H:%M:%S'
time_now = datetime.datetime.now()
time_str = time_now.strftime(time_format)
print("          End Time:  " + str(time_str))

winsound.Beep(1000, 1000)

print("ok, that's all finished")


